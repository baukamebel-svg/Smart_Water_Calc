
import streamlit as st
import matplotlib.pyplot as plt
import os

try:
    from openai import OpenAI
    OPENAI_OK = True
except Exception:
    OPENAI_OK = False

st.set_page_config(page_title="Smart Water Calc v3", page_icon="üíß", layout="wide")
st.title("üíß Smart Water Calc v3 ‚Äî –ê–π–ª—ã“õ –Ω–æ—Ä–º–∞, —Ç”©–ª–µ–º –∂”ô–Ω–µ –∞–≤—Ç–æ–º–∞—Ç—Ç—ã –ñ–ò –∫–µ“£–µ—Å")
st.caption("–ú–µ–∫—Ç–µ–ø –æ“õ—É—à—ã–ª–∞—Ä—ã–Ω–∞ –∞—Ä–Ω–∞–ª“ì–∞–Ω –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤—Ç—ñ —ç–∫–æ“õ“±—Ä–∞–ª (“õ–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω–¥–µ)")

DAILY_NORM_PER_PERSON_L = 140.0
BASE_TARIFF_TENGE_PER_M3 = 30.0
EXCESS_TARIFF_TENGE_PER_M3 = 611.0

st.sidebar.header("–ü–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä")
people = st.sidebar.number_input("“Æ–π–¥–µ–≥—ñ –∞–¥–∞–º —Å–∞–Ω—ã", min_value=1, value=5, step=1)
days_in_month = st.sidebar.number_input("–ê–π–¥–∞“ì—ã –∫“Ø–Ω —Å–∞–Ω—ã", min_value=1, value=30, step=1)
unit = st.sidebar.selectbox("–ê–π–ª—ã“õ —Ç“±—Ç—ã–Ω—É ”©–ª—à–µ–º—ñ", ["–ª–∏—Ç—Ä (L)", "—Ç–µ–∫—à–µ –º–µ—Ç—Ä (m¬≥)"])

if unit == "–ª–∏—Ç—Ä (L)":
    cons_in = st.sidebar.number_input("–ê–π —ñ—à—ñ–Ω–¥–µ–≥—ñ –Ω–∞“õ—Ç—ã —Ç“±—Ç—ã–Ω—É (–ª)", min_value=0.0, value=50000.0, step=100.0)
    cons_l = cons_in
else:
    cons_in = st.sidebar.number_input("–ê–π —ñ—à—ñ–Ω–¥–µ–≥—ñ –Ω–∞“õ—Ç—ã —Ç“±—Ç—ã–Ω—É (–º¬≥)", min_value=0.0, value=50.0, step=1.0)
    cons_l = cons_in * 1000.0

monthly_norm_l = DAILY_NORM_PER_PERSON_L * people * days_in_month
within_l = min(cons_l, monthly_norm_l)
excess_l = max(0.0, cons_l - monthly_norm_l)
saved_l = max(0.0, monthly_norm_l - cons_l)

total_cost = (within_l/1000.0) * BASE_TARIFF_TENGE_PER_M3 + (excess_l/1000.0) * EXCESS_TARIFF_TENGE_PER_M3
saved_cost = (saved_l/1000.0) * BASE_TARIFF_TENGE_PER_M3

c1, c2, c3, c4 = st.columns(4)
with c1: st.metric("–ê–π–ª—ã“õ –Ω–æ—Ä–º–∞ (–ª)", f"{monthly_norm_l:,.0f}".replace(",", " "))
with c2: st.metric("–ù–∞“õ—Ç—ã —Ç“±—Ç—ã–Ω—É (–ª)", f"{cons_l:,.0f}".replace(",", " "))
with c3: st.metric("–ê—Ä—Ç—ã“õ/“Æ–Ω–µ–º (–ª)", f"{(excess_l if excess_l>0 else -saved_l):,.0f}".replace(",", " "))
with c4: st.metric("–ñ–∞–ª–ø—ã —Ç”©–ª–µ–º (‚Ç∏)", f"{total_cost:,.2f}".replace(",", " "))

st.subheader("–¢–æ–ª—ã“õ –µ—Å–µ–ø")
st.write(f"- –ê–¥–∞–º —Å–∞–Ω—ã: {people}")
st.write(f"- –ê–π–¥–∞“ì—ã –∫“Ø–Ω —Å–∞–Ω—ã: {days_in_month}")
st.write(f"- –ù–æ—Ä–º–∞ —ñ—à—ñ–Ω–¥–µ–≥—ñ —Ç–∞—Ä–∏—Ñ: {BASE_TARIFF_TENGE_PER_M3:.0f} ‚Ç∏/–º¬≥")
st.write(f"- –ê—Ä—Ç—ã“õ —Ç“±—Ç—ã–Ω—É —Ç–∞—Ä–∏—Ñ—ñ: {EXCESS_TARIFF_TENGE_PER_M3:.0f} ‚Ç∏/–º¬≥")
st.write(f"- –ù–æ—Ä–º–∞ —à–µ–≥—ñ–Ω–¥–µ–≥—ñ —Ç“±—Ç—ã–Ω—É: {within_l:,.0f} –ª ‚Üí {(within_l/1000.0)*BASE_TARIFF_TENGE_PER_M3:,.2f} ‚Ç∏".replace(",", " "))
st.write(f"- –ê—Ä—Ç—ã“õ —Ç“±—Ç—ã–Ω—É: {excess_l:,.0f} –ª ‚Üí {(excess_l/1000.0)*EXCESS_TARIFF_TENGE_PER_M3:,.2f} ‚Ç∏".replace(",", " "))

if saved_l > 0:
    st.success(f"‚úÖ –ù–æ—Ä–º–∞–¥–∞–Ω {saved_l:,.0f} –ª –∞–∑ ‚Üí —à–∞–º–∞–º–µ–Ω {saved_cost:,.2f} ‚Ç∏ “Ø–Ω–µ–º.".replace(",", " "))

st.subheader("–ì—Ä–∞—Ñ–∏–∫—Ç–µ—Ä")
fig1, ax1 = plt.subplots()
ax1.bar(["–ê–π–ª—ã“õ –Ω–æ—Ä–º–∞", "–ù–∞“õ—Ç—ã —Ç“±—Ç—ã–Ω—É"], [monthly_norm_l/1000.0, cons_l/1000.0])
ax1.set_ylabel("–ö”©–ª–µ–º (–º¬≥)")
ax1.set_title("–ê–π–ª—ã“õ –Ω–æ—Ä–º–∞ –º–µ–Ω –Ω–∞“õ—Ç—ã —Ç“±—Ç—ã–Ω—É (–º¬≥)")
st.pyplot(fig1)

fig2, ax2 = plt.subplots()
labels, values = [], []
if saved_l > 0:
    labels.append("“Æ–Ω–µ–º (–ª)"); values.append(saved_l)
if excess_l > 0:
    labels.append("–ê—Ä—Ç—ã“õ (–ª)"); values.append(excess_l)
if not labels:
    labels = ["–ê–π—ã—Ä–º–∞ –∂–æ“õ"]; values = [0]
ax2.bar(labels, values)
ax2.set_ylabel("–õ–∏—Ç—Ä")
ax2.set_title("–ù–æ—Ä–º–∞–¥–∞–Ω –∞—É—ã—Ç“õ—É")
st.pyplot(fig2)

st.subheader("–ñ–ò –∫–µ“£–µ—Å—ñ (–∞–≤—Ç–æ–º–∞—Ç—Ç—ã)")
if OPENAI_OK:
    api_key = st.secrets.get("OPENAI_API_KEY") if "OPENAI_API_KEY" in st.secrets else os.getenv("OPENAI_API_KEY")
    if api_key:
        try:
            client = OpenAI(api_key=api_key)
            context = (
                f"–ê–¥–∞–º —Å–∞–Ω—ã: {people}\n"
                f"–ê–π–¥–∞“ì—ã –∫“Ø–Ω —Å–∞–Ω—ã: {days_in_month}\n"
                f"–ê–π–ª—ã“õ –Ω–æ—Ä–º–∞ (–ª): {int(monthly_norm_l)}\n"
                f"–ù–∞“õ—Ç—ã —Ç“±—Ç—ã–Ω—É (–ª): {int(cons_l)}\n"
                f"–ê—Ä—Ç—ã“õ —Ç“±—Ç—ã–Ω—É (–ª): {int(excess_l)}\n"
                f"“Æ–Ω–µ–º–¥–µ–ª–≥–µ–Ω —Å—É (–ª): {int(saved_l)}\n"
                f"–ñ–∞–ª–ø—ã —Ç”©–ª–µ–º (‚Ç∏): {total_cost:.2f}"
            )
            prompt = (
                "–¢”©–º–µ–Ω–¥–µ–≥—ñ —Å—É —Ç“±—Ç—ã–Ω—É –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä—ñ–Ω–µ —Å“Ø–π–µ–Ω—ñ–ø, “õ–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω–¥–µ 5‚Äì6 —Å”©–π–ª–µ–º–Ω–µ–Ω —Ç“±—Ä–∞—Ç—ã–Ω —Ç–∏—è–Ω–∞“õ—Ç—ã –∫–µ“£–µ—Å –∂–∞–∑. "
                "“ö—ã—Å“õ–∞—à–∞ “õ–æ—Ä—ã—Ç—ã–Ω–¥—ã –±–µ—Ä—ñ–ø, –Ω–∞“õ—Ç—ã “Ø–Ω–µ–º–¥–µ—É —Ç”ô—Å—ñ–ª–¥–µ—Ä—ñ–Ω “±—Å—ã–Ω. –°”©–π–ª–µ–º–¥–µ—Ä –∂—ã–ª—ã ”ô—Ä—ñ —Ç“Ø—Å—ñ–Ω—ñ–∫—Ç—ñ –±–æ–ª—Å—ã–Ω.\n\n"
                + context
            )
            resp = client.chat.completions.create(
                model="gpt-4o-mini",
                messages=[{"role": "user", "content": prompt}]
            )
            st.write(resp.choices[0].message.content)
        except Exception as e:
            st.info(f"–ñ–ò –∫–µ“£–µ—Å—ñ–Ω –∞–ª—É –º“Ø–º–∫—ñ–Ω –±–æ–ª–º–∞–¥—ã: {e}")
    else:
        st.info("–ñ–ò –∫–µ“£–µ—Å—ñ–Ω –∫”©—Ä—É “Ø—à—ñ–Ω Secrets ‚Üí OPENAI_API_KEY –æ—Ä–Ω–∞—Ç—ã“£—ã–∑.")
else:
    st.info("OpenAI –∫—ñ—Ç–∞–ø—Ö–∞–Ω–∞—Å—ã –æ—Ä–Ω–∞—Ç—ã–ª–º–∞“ì–∞–Ω. requirements.txt –∞—Ä“õ—ã–ª—ã –æ—Ä–Ω–∞—Ç—ã“£—ã–∑.")

st.markdown("---")
st.caption("¬© 2025 Smart Water Calc v3 | “ö–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω–¥–µ–≥—ñ –∞–≤—Ç–æ–º–∞—Ç—Ç—ã –ñ–ò –∫–µ“£–µ—Å—ñ")
